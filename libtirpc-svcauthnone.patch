--- libtirpc-0.1.7/src/svc_auth_none.c.orig	2006-08-14 11:52:49.000000000 -0400
+++ libtirpc-0.1.7/src/svc_auth_none.c	2006-08-14 11:52:53.000000000 -0400
@@ -0,0 +1,73 @@
+/*
+  svc_auth_none.c
+
+  Copyright (c) 2000 The Regents of the University of Michigan.
+  All rights reserved.
+
+  Copyright (c) 2000 Dug Song <dugsong@UMICH.EDU>.
+  All rights reserved, all wrongs reversed.
+
+  Redistribution and use in source and binary forms, with or without
+  modification, are permitted provided that the following conditions
+  are met:
+
+  1. Redistributions of source code must retain the above copyright
+     notice, this list of conditions and the following disclaimer.
+  2. Redistributions in binary form must reproduce the above copyright
+     notice, this list of conditions and the following disclaimer in the
+     documentation and/or other materials provided with the distribution.
+  3. Neither the name of the University nor the names of its
+     contributors may be used to endorse or promote products derived
+     from this software without specific prior written permission.
+
+  THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED
+  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+  DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+  $Id$
+ */
+
+#include <rpc/rpc.h>
+
+static bool_t	svcauth_none_destroy();
+static bool_t   svcauth_none_wrap();
+
+struct svc_auth_ops svc_auth_none_ops = {
+	svcauth_none_wrap,
+	svcauth_none_wrap,
+	svcauth_none_destroy
+};
+
+SVCAUTH svc_auth_none = {
+	&svc_auth_none_ops,
+	NULL,
+};
+
+static bool_t
+svcauth_none_destroy(SVCAUTH *auth)
+{
+	return (TRUE);
+}
+
+static bool_t
+svcauth_none_wrap(SVCAUTH *auth, XDR *xdrs, xdrproc_t xdr_func,
+		  caddr_t xdr_ptr)
+{
+	return ((*xdr_func)(xdrs, xdr_ptr));
+}
+
+enum auth_stat
+_svcauth_none(struct svc_req *rqst, struct rpc_msg *msg)
+{
+	rqst->rq_xprt->xp_auth = &svc_auth_none;
+
+	return (AUTH_OK);
+}
--- libtirpc-0.1.7/src/Makefile.am.orig	2006-08-11 12:58:28.000000000 -0400
+++ libtirpc-0.1.7/src/Makefile.am	2006-08-14 11:54:20.000000000 -0400
@@ -28,7 +28,8 @@ libtirpc_la_SOURCES += xdr.c xdr_rec.c x
 
 ## Secure-RPC
 if GSS
-    libtirpc_la_SOURCES += auth_gss.c authgss_prot.c svc_auth_gss.c
+    libtirpc_la_SOURCES += auth_gss.c authgss_prot.c svc_auth_gss.c \
+		svc_auth_none.c
     libtirpc_la_LDFLAGS += $(GSSAPI_LIBS)
     libtirpc_la_CFLAGS = -DHAVE_RPCSEC_GSS $(GSSAPI_CFLAGS)
 endif
@@ -49,7 +50,7 @@ $(libtirpc_la_OBJECTS) :auth_none.c auth
         svc_raw.c svc_run.c svc_simple.c svc_vc.c \
 	xdr.c xdr_rec.c xdr_array.c xdr_float.c xdr_mem.c xdr_reference.c xdr_stdio.c \
 	auth_gss.c authgss_prot.c svc_auth_gss.c getpeereid.c \
-	auth_time.c auth_des.c authdes_prot.c
+	auth_time.c auth_des.c authdes_prot.c svc_auth_none.c
         
 else
 $(libtirpc_la_OBJECTS) :auth_none.c auth_unix.c authunix_prot.c bindresvport.c clnt_bcast.c \
